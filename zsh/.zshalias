# CONFIGURE EXPANDABLE ALIASES
typeset -a ealiases
ealiases=()
function ealias() {
	alias $1
	ealiases+=(${1%%\=*})
}
function expand-ealias() {
	if [[ $LBUFFER =~ "(^|[;|&])\s*(${(j:|:)ealiases})\$" ]]; then
		zle _expand_alias
		zle expand-word
	fi
	zle magic-space
}
zle -N expand-ealias
bindkey -M viins ' '    expand-ealias
bindkey -M viins '^ '   magic-space # control-space to bypass completion
bindkey -M isearch " "  magic-space # normal space during searches

# CONFIGURE FZF BINDINGS
# unmap <A-C>, map <C-G> instead
bindkey -r fzf-cd-widget '\ec' 
bindkey '^G' fzf-cd-widget

###############
# SET ALIASES #
###############

#####
# (1) adjustments

# let sudo take aliases as arguments
alias sudo='sudo '
# dunno why I have this
alias 'sudo vim'='sudo -e'

# make ls use colors, and get easy access to common arguments
alias ls='ls -NFv --group-directories-first --color=auto'
alias ll='ls -l '
alias la='ls -a '

# make "help" work as expected
unalias run-help
alias help=run-help

# better pgrep
alias pgrep='ps -ef | head -1; ps -ef | grep'

# use ag instead of ack
alias ack='ag'

# use vim keybindings in info
alias info='info --vi-keys '

# load math.h in bc
alias bc='bc -l'

# discard dumb error output from ranger
alias ranger='ranger 2>/dev/null'

#####
# (2) abbreviations

# transmission-remote
alias to=transmission-remote

# open a file
alias open=rifle

# connman
ealias cm=connmanctl

# update system
alias upd='pacaur -Syu --devel --needed; echo "Checking for orphan packages..."; pacclean'

# ping google
alias pingg='ping google.com'

# list all packages by reverse intall date
alias paclist="expac -Q --timefmt='%F %T' '%w %l %n' | grep 'explicit ' | sort -n | awk "\''{print $4}'\'

# switch to hdmi output
alias hdmi='xrandr --output HDMI2 --mode 1920x1080'

# easy access to vimrc
alias vimrc='vim /home/dylan/.vimrc'

# get dynamic range of currently playing song
alias dr='dr14_tmeter -f ~/audio/library/hi-res/"$(mpc -f %file% current)" 2>&1 | tail -3'

# back up home folder
ealias backup='sudo rsync -aAXHv --exclude={"/.Trash-1000","/dylan/.cache/*","/dylan/.config/chromium/*"} --delete-delay /home/ /media/homebackup'

# demlo
ealias dl='demlo'

# avoid typos
alias ragner=ranger
alias l='ls '
alias s='ls '

# git stuff
ealias gs='git status'
ealias ga='git add'
ealias gb='git branch'
ealias gc='git commit -m'
ealias gca='git commit -am'
ealias gl='GIT_PAGER="less" git lol'
ealias gp='git push'
ealias gP='git pull'
ealias gd='git diff'
ealias gr='git reset'
ealias gh='git checkout'

# traverse forward through git branch history
ghf() {
	to="$*"
	if [[ "$to" == "" ]]; then
		to=master
	fi
	git checkout $(git rev-list --topo-order HEAD.."$to" | tail -1)
}

# traverse backward through git branch history
ghb() {
	git checkout 'HEAD~'
}

#####
# (3) standalone functionality

# remove orphan packages
pacclean() {
	toremove=($(pacaur -Qqdt))
	if [[ ${#toremove[@]} == 0 ]]; then
		echo "Package database clean."
	else
		pacaur -Rs "${toremove[@]}"
	fi
}

# use vim ex commands in a UNIX pipe
vp() {
    vim - -u NONE -es '+1' "+$*" '+%print' '+:qa!' | tail -n +2
}

# use vim normal mode commands in a UNIX pipe
vn() {
    vim - -u NONE -es '+1' "+normal $*" '+%print' '+:qa!' | tail -n +2
}

# compute human-readable filesize of a given file
size() {
	numfmt --to=iec-i --suffix=B --format="%.3f" "$(stat -c %s $1)"
}

# filter out non-curse words from stdin
curses() {
	words=( $(</usr/share/dict/curses) )
	re='('
	for word in "${words[@]}"; do
		re="${re}${word}|";
	done
	re="${re:0:-1})"
	ag -w "${re}" "$@"
}

# connect to a wifi network by ssid with connman
cmc() {
	ssid=$1
	results_str="$(connmanctl services | grep "$ssid")"
	local IFS=$'\n'
	results=( ${=results_str} )
	if [[ ${#results} == 0 ]]; then
		echo "No such network; aborting. Try scanning.";
		return
	elif [[ ${#results} > 1 ]]; then
		for result in "${results[@]}"; do
			print $result;
		done
		echo "Too many results; aborting.";
		return
	fi
	name=$( echo "${results[1]}" | awk '{print $(NF)}')
	connmanctl connect "$name"
}
